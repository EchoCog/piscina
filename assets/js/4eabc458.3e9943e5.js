"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1081],{5933:(e,n,r)=>{r.d(n,{TF:()=>i});var a=r(4848),t=r(8453);const i=()=>{const e={code:"code",pre:"pre",...(0,t.R)()};return(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-js",title:"workerWrapper.js",children:'const { workerData } = require(\'worker_threads\');\n\nif (workerData.fullpath.endsWith(".ts")) {\nrequire("ts-node").register();\n}\nmodule.exports = require(workerData.fullpath);\n'})})}},8546:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>d});var a=r(4848),t=r(8453),i=r(5933),s=r(1470),l=r(9365);const o={id:"Basic Usage",sidebar_position:2},c=void 0,u={id:"getting-started/Basic Usage",title:"Basic Usage",description:"Setting Up Your Main File",source:"@site/docs/getting-started/basic-usage.mdx",sourceDirName:"getting-started",slug:"/getting-started/Basic Usage",permalink:"/getting-started/Basic Usage",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"Basic Usage",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/getting-started/Installation"},next:{title:"Managing Worker Threads",permalink:"/getting-started/Managing Worker Threads"}},p={},d=[{value:"Setting Up Your Main File",id:"setting-up-your-main-file",level:2},{value:"Using a Worker Wrapper File in a TypeScript Project",id:"using-a-worker-wrapper-file-in-a-typescript-project",level:2},{value:"Creating a Worker File",id:"creating-a-worker-file",level:2},{value:"Using Async Functions or Promises",id:"using-async-functions-or-promises",level:2},{value:"Supporting ECMAScript Modules (ESM)",id:"supporting-ecmascript-modules-esm",level:2},{value:"Exporting Multiple Worker Functions",id:"exporting-multiple-worker-functions",level:2},{value:"Cancellable Tasks",id:"cancellable-tasks",level:2},{value:"Using <code>AbortController</code>",id:"using-abortcontroller",level:3},{value:"Using <code>EventEmitter</code>",id:"using-eventemitter",level:3}];function m(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"setting-up-your-main-file",children:"Setting Up Your Main File"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"Javascript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:"title='main.js'",children:'const path = require("path");\nconst Piscina = require("piscina");\n\n// Create a new Piscina instance pointing to your worker file\nconst piscina = new Piscina({\n  filename: path.resolve(__dirname, "worker.js"),\n});\n\n// Run a task using Piscina\n(async () => {\n  const result = await piscina.run({ a: 4, b: 6 });\n  console.log(result); // prints 10\n})();\n'})})}),(0,a.jsx)(l.A,{value:"Typescript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:"title='main.ts'",children:'import Piscina from "piscina";\nimport { resolve } from "path";\nimport { filename } from "./worker";\n\nconst piscina = new Piscina({\n  filename: resolve(__dirname, "./workerWrapper.js"),\n  workerData: { fullpath: filename },\n});\n\n(async () => {\n  const result = await piscina.run({ a: 2, b: 3 }, { name: "addNumbers" });\n  console.log("Result:", result);\n})();\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"using-a-worker-wrapper-file-in-a-typescript-project",children:"Using a Worker Wrapper File in a TypeScript Project"}),"\n",(0,a.jsxs)(n.p,{children:["When working with TypeScript, you need to use a ",(0,a.jsx)(n.code,{children:"workerWrapper.js"})," file to load your worker file correctly. This file checks if the provided file path ends with ",(0,a.jsx)(n.code,{children:".ts"})," and registers the ",(0,a.jsx)(n.code,{children:"ts-node"})," compiler to handle TypeScript files. You can learn more about using Typescript with Piscina in the ",(0,a.jsx)(n.a,{href:"/examples/Typescript",children:"examples section"}),"."]}),"\n",(0,a.jsx)(i.TF,{}),"\n",(0,a.jsx)(n.h2,{id:"creating-a-worker-file",children:"Creating a Worker File"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"Javascript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'tab={"label":"Javascript"} title=\'worker.js\'',children:"// A simple worker function that adds two numbers\nmodule.exports = ({ a, b }) => a + b;\n"})})}),(0,a.jsx)(l.A,{value:"Typescript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'tab={"label":"Typescript"} title=\'worker.ts\'',children:'// A simple worker function that adds two numbers\nconst { resolve } = require("path");\n\nexport const filename = resolve(__filename);\ninterface Inputs {\n  a: number;\n  b: number;\n}\nexport function addNumbers({ a, b }: Inputs): number {\n  return a + b;\n}\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"using-async-functions-or-promises",children:"Using Async Functions or Promises"}),"\n",(0,a.jsx)(n.p,{children:"Workers can be asynchronous or return a promise:"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"Javascript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'tab={"label":"Javascript"}',children:'const { setTimeout } = require("timers/promises");\n\n// An async worker function with simulated delay\nmodule.exports = async ({ a, b }) => {\n  // Fake some async activity with a delay\n  await setTimeout(100);\n  return a + b;\n};\n'})})}),(0,a.jsx)(l.A,{value:"Typescript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const { setTimeout } = require("timers/promises");\n\ninterface WorkerInput {\n  a: number;\n  b: number;\n}\n// An async worker function with simulated delay\nmodule.exports = async ({ a, b }: WorkerInput): Promise<number> => {\n  // Fake some async activity with a delay\n  await setTimeout(100);\n  return a + b;\n};\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"supporting-ecmascript-modules-esm",children:"Supporting ECMAScript Modules (ESM)"}),"\n",(0,a.jsx)(n.p,{children:"Piscina.js also works with ECMAScript modules:"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"Javascript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'import { Piscina } from "piscina";\n\nconst piscina = new Piscina({\n  // The URL must be a file:// URL\n  filename: new URL("./worker.mjs", import.meta.url).href,\n});\n\nconst result = await piscina.run({ a: 4, b: 6 });\nconsole.log(result); // Prints 10\n'})})}),(0,a.jsxs)(l.A,{value:"Typescript",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'import { Piscina } from "piscina";\nimport { filename } from "./worker";\n\nconst workerWrapperURL = new URL("workerWrapper.js", import.meta.url);\n\nconst piscina = new Piscina({\n  filename: workerWrapperURL.href,\n  workerData: { fullpath: filename },\n});\n(async () => {\n  const result = await piscina.run({ a: 4, b: 6 }, { name: "addNumbers" });\n  console.log(result); // Prints 10\n})();\n'})}),(0,a.jsx)(i.TF,{})]})]}),"\n",(0,a.jsx)(n.p,{children:"In your worker module file:"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"Javascript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="worker.mjs"',children:"// Default export of an addition function\nexport default ({ a, b }) => a + b;\n"})})}),(0,a.jsx)(l.A,{value:"Typescript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'tab={"label":"Typescript"} title="worker.ts"',children:"// Default export of an addition function\ninterface Inputs {\n  a: number;\n  b: number;\n}\n\nexport default function addNumbers({ a, b }: Inputs): number {\n  return a + b;\n}\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"exporting-multiple-worker-functions",children:"Exporting Multiple Worker Functions"}),"\n",(0,a.jsx)(n.p,{children:"A single worker file may export multiple named handler functions:"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"Javascript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'tab={"label":"Javascript"} title="worker.js"',children:'"use strict";\n\nfunction add({ a, b }) {\n  return a + b;\n}\n\nfunction multiply({ a, b }) {\n  return a * b;\n}\n\nadd.add = add;\nadd.multiply = multiply;\n\nmodule.exports = add;\n'})})}),(0,a.jsx)(l.A,{value:"Typescript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="worker.ts"',children:'import { resolve } from "path";\n\nexport const filename = resolve(__filename);\n\nfunction add({ a, b }: { a: number, b: number }): number {\n  return a + b;\n}\n\nfunction multiply({ a, b }: { a: number, b: number }): number {\n  return a * b;\n}\n\nexport { multiply, add };\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"The export to target can then be specified when the task is submitted:"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"Javascript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'tab={"label":"Javascript"} title="main.js"',children:'"use strict";\n\nconst Piscina = require("piscina");\nconst { resolve } = require("path");\n\n// Initialize Piscina with the worker file\nconst piscina = new Piscina({\n  filename: resolve(__dirname, "worker.js"),\n});\n\n// Run multiple tasks concurrently\n(async () => {\n  const [sum, product] = await Promise.all([\n    piscina.run({ a: 4, b: 6 }, { name: "add" }),\n    piscina.run({ a: 4, b: 6 }, { name: "multiply" }),\n  ]);\n})();\n'})})}),(0,a.jsxs)(l.A,{value:"Typescript",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'tab={"label":"Typescript","span":2} title="main.ts"',children:'import Piscina from "piscina";\nimport { resolve } from "path";\nimport { filename } from "./worker";\n\nconst piscina = new Piscina({\n  filename: resolve(__dirname, "./workerWrapper.js"),\n  workerData: { fullpath: filename },\n});\n\n// Run multiple tasks concurrently\n(async () => {\n  const [sum, product] = await Promise.all([\n    piscina.run({ a: 4, b: 6 }, { name: "add" }),\n    piscina.run({ a: 4, b: 6 }, { name: "multiply" }),\n  ]);\n})();\n'})}),(0,a.jsx)(i.TF,{})]})]}),"\n",(0,a.jsx)(n.h2,{id:"cancellable-tasks",children:"Cancellable Tasks"}),"\n",(0,a.jsx)(n.p,{children:"Piscina supports task cancellation even if the task has already been submitted to a worker and is being actively processed. This can be used, for instance, to cancel tasks that are taking too long to run."}),"\n",(0,a.jsxs)(n.p,{children:["Tasks can be canceled using an ",(0,a.jsx)(n.code,{children:"AbortController"})," or an ",(0,a.jsx)(n.code,{children:"EventEmitter"}),"."]}),"\n",(0,a.jsxs)(n.h3,{id:"using-abortcontroller",children:["Using ",(0,a.jsx)(n.code,{children:"AbortController"})]}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"Javascript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="main.js"',children:'"use strict";\n\nconst Piscina = require("piscina");\nconst { resolve } = require("path");\n\n// Set up Piscina with the worker file\nconst piscina = new Piscina({\n  filename: resolve(__dirname, "worker.js"),\n});\n\n// Run a task and cancel it using AbortController\n(async () => {\n  const abortController = new AbortController();\n  const { signal } = abortController;\n  const task = piscina.run({ a: 4, b: 6 }, { signal });\n  abortController.abort(); // Cancel the task\n\n  try {\n    await task;\n  } catch (err) {\n    console.log("The task was canceled"); // Handle the cancellation\n  }\n})();\n'})})}),(0,a.jsxs)(l.A,{value:"Typescript",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="main.ts"',children:'import Piscina from "piscina";\nimport { resolve } from "path";\nimport { filename } from "./worker";\n\n// Set up Piscina with the worker and workerWrapper file\nconst piscina = new Piscina({\n  filename: resolve(__dirname, "./workerWrapper.js"),\n  workerData: { fullpath: filename },\n});\n\n// Run a task and cancel it using AbortController\n(async () => {\n  const abortController = new AbortController();\n  const { signal } = abortController;\n  const task = piscina.run({ a: 4, b: 6 }, { signal });\n  abortController.abort(); // Cancel the task\n\n  try {\n    await task;\n  } catch (err) {\n    console.log("The task was canceled"); // Handle the cancellation\n  }\n})();\n'})}),(0,a.jsx)(i.TF,{})]})]}),"\n",(0,a.jsxs)(n.h3,{id:"using-eventemitter",children:["Using ",(0,a.jsx)(n.code,{children:"EventEmitter"})]}),"\n",(0,a.jsx)(n.p,{children:"A plain Node.js EventEmitter can also be used here, in which case, emitting the abort event on it will have the same effect."}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"Javascript",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'tab={"label":"Javascript"} title="main.js"',children:'"use strict";\n\nconst Piscina = require("piscina");\nconst EventEmitter = require("events");\nconst { resolve } = require("path");\n\n// Initialize Piscina with the worker file\nconst piscina = new Piscina({\n  filename: resolve(__dirname, "worker.js"),\n});\n\n// Run a task and cancel it using an EventEmitter\n(async () => {\n  const ee = new EventEmitter();\n  const task = piscina.run({ a: 4, b: 6 }, { signal: ee });\n  ee.emit("abort"); // Emit an \'abort\' event to cancel the task\n\n  try {\n    await task;\n  } catch (err) {\n    console.log("The task was canceled"); // Handle the cancellation\n  }\n})();\n'})})}),(0,a.jsxs)(l.A,{value:"Typescript",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'tab={"label":"Typescript","span":2} title="main.ts"',children:'import Piscina from "piscina";\nimport { resolve } from "path";\nimport { filename } from "./worker";\n\n// Initialize Piscina with the worker and workerWrapper file\nconst piscina = new Piscina({\n  filename: resolve(__dirname, "./workerWrapper.js"),\n  workerData: { fullpath: filename },\n});\n\n// Run a task and cancel it using an EventEmitter\n(async () => {\n  const ee = new EventEmitter();\n  const task = piscina.run({ a: 4, b: 6 }, { signal: ee });\n  ee.emit("abort"); // Emit an \'abort\' event to cancel the task\n\n  try {\n    await task;\n  } catch (err) {\n    console.log("The task was canceled"); // Handle the cancellation\n  }\n})();\n'})}),(0,a.jsx)(i.TF,{})]})]}),"\n",(0,a.jsxs)(n.p,{children:["Find more use cases in the ",(0,a.jsx)(n.a,{href:"../category/examples/",children:"Examples"})," section of the documentation"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},9365:(e,n,r)=>{r.d(n,{A:()=>s});r(6540);var a=r(4164);const t={tabItem:"tabItem_Ymn6"};var i=r(4848);function s(e){let{children:n,hidden:r,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(t.tabItem,s),hidden:r,children:n})}},1470:(e,n,r)=>{r.d(n,{A:()=>k});var a=r(6540),t=r(4164),i=r(3104),s=r(6347),l=r(205),o=r(7485),c=r(1682),u=r(679);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:r}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:r,attributes:a,default:t}}=e;return{value:n,label:r,attributes:a,default:t}}))}(r);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function m(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:r}=e;const t=(0,s.W6)(),i=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,o.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})}),[i,t])]}function b(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,i=d(e),[s,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i}))),[c,p]=h({queryString:r,groupId:t}),[b,f]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,i]=(0,u.Dv)(r);return[t,(0,a.useCallback)((e=>{r&&i.set(e)}),[r,i])]}({groupId:t}),g=(()=>{const e=c??b;return m({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{g&&o(g)}),[g]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),f(e)}),[p,f,i]),tabValues:i}}var f=r(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(4848);function j(e){let{className:n,block:r,selectedValue:a,selectValue:s,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),u=e=>{const n=e.currentTarget,r=o.indexOf(n),t=l[r].value;t!==a&&(c(n),s(t))},p=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;n=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;n=o[r]??o[o.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":r},n),children:l.map((e=>{let{value:n,label:r,attributes:i}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>o.push(e),onKeyDown:p,onClick:u,...i,className:(0,t.A)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":a===n}),children:r??n},n)}))})}function x(e){let{lazy:n,children:r,selectedValue:t}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function w(e){const n=b(e);return(0,v.jsxs)("div",{className:(0,t.A)("tabs-container",g.tabList),children:[(0,v.jsx)(j,{...n,...e}),(0,v.jsx)(x,{...n,...e})]})}function k(e){const n=(0,f.A)();return(0,v.jsx)(w,{...e,children:p(e.children)},String(n))}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var a=r(6540);const t={},i=a.createContext(t);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);