"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9394],{5933:(e,n,r)=>{r.d(n,{TF:()=>s});var t=r(4848),a=r(8453);const s=()=>{const e={code:"code",pre:"pre",...(0,a.R)()};return(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",title:"workerWrapper.js",children:'const { workerData } = require(\'worker_threads\');\n\nif (workerData.fullpath.endsWith(".ts")) {\nrequire("ts-node").register();\n}\nmodule.exports = require(workerData.fullpath);\n'})})}},5228:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var t=r(4848),a=r(8453),s=r(5933),o=r(1470),i=r(9365);const l={id:"Async Load",sidebar_position:2},c=void 0,u={id:"examples/Async Load",title:"Async Load",description:"Piscina supports asynchronously loaded workers. This feature allows you to perform asynchronous operations during worker initialization, such as loading configurations or establishing database connections.",source:"@site/docs/examples/async_load.mdx",sourceDirName:"examples",slug:"/examples/Async Load",permalink:"/piscina/examples/Async Load",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"Async Load",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Aborting Tasks",permalink:"/piscina/examples/Aborting Tasks"},next:{title:"Using Typescript with Piscina",permalink:"/piscina/examples/Using Typescript with Piscina"}},d={},p=[];function m(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Piscina supports asynchronously loaded workers. This feature allows you to perform asynchronous operations during worker initialization, such as loading configurations or establishing database connections."}),"\n",(0,t.jsx)(n.p,{children:"For example, the main script below creates a Piscina pool and runs tasks from two worker files."}),"\n",(0,t.jsxs)(o.A,{children:[(0,t.jsx)(i.A,{value:"Javascript",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="main.js"',children:'"use strict";\n\nconst Piscina = require("../..");\n\nconst pool = new Piscina();\nconst { resolve } = require("path");\n\n(async () => {\nawait Promise.all([\npool.run({}, { filename: resolve(__dirname, "worker") }),\npool.run({}, { filename: resolve(__dirname, "worker.mjs") }),\n]);\n})();\n\n'})})}),(0,t.jsxs)(i.A,{value:"Typescript",children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",metastring:'title="main.ts"',children:'import Piscina from "piscina";\nimport { resolve } from "path";\nimport { filename } from "./worker";\n\nconst pool = new Piscina({\n  workerData: { fullpath: filename },\n});\n\n(async () => {\n  try {\n    await Promise.all([\n      pool.run(\n        {},\n        {\n          name: "callSleep",\n          filename: resolve(__dirname, "./workerWrapper.js"),\n        }\n      ),\n      pool.run({}, { filename: resolve(__dirname, "worker.mjs") }),\n    ]);\n  } catch (error) {\n    console.log(error);\n  }\n})();\n\n'})}),(0,t.jsx)(s.TF,{})]})]}),"\n",(0,t.jsx)(n.p,{children:"Both worker files demonstrate asynchronous loading. They use a sleep function to simulate an asynchronous operation that takes 500 milliseconds."}),"\n",(0,t.jsxs)(o.A,{children:[(0,t.jsx)(i.A,{value:"Javascript",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="worker.js"',children:'"use strict";\n\nconst { promisify } = require("util");\nconst sleep = promisify(setTimeout);\n\nmodule.exports = (async () => {\nawait sleep(500);\nreturn () => console.log("hello from an async loaded CommonJS worker");\n})();\n'})})}),(0,t.jsx)(i.A,{value:"Typescript",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="worker.ts"',children:'import { promisify } from "util";\nimport { resolve } from "path";\n\nexport const filename = resolve(__filename);\n\nconst sleep = promisify(setTimeout);\n\nexport async function callSleep(): Promise<void> {\n  await sleep(500);\n  return console.log("hello from an async loaded TypeScript worker");\n}\n'})})})]}),"\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"worker.mjs"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="worker.mjs"',children:'// eslint-disable-next-line no-eval\nimport util from "util";\nconst sleep = util.promisify(setTimeout);\n\nasync function load() {\n  await sleep(500);\n  return () => console.log("hello from an async loaded ESM worker");\n}\n\nexport default load();\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You can also check out this example on ",(0,t.jsx)(n.a,{href:"https://github.com/piscinajs/piscina/tree/current/examples/async_load",children:"github"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},9365:(e,n,r)=>{r.d(n,{A:()=>o});r(6540);var t=r(4164);const a={tabItem:"tabItem_Ymn6"};var s=r(4848);function o(e){let{children:n,hidden:r,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,o),hidden:r,children:n})}},1470:(e,n,r)=>{r.d(n,{A:()=>j});var t=r(6540),a=r(4164),s=r(3104),o=r(6347),i=r(205),l=r(7485),c=r(1682),u=r(679);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}(r);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function m(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:r}=e;const a=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,l.aZ)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function f(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,s=p(e),[o,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[c,d]=h({queryString:r,groupId:a}),[f,b]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,u.Dv)(r);return[a,(0,t.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:a}),g=(()=>{const e=c??f;return m({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),b(e)}),[d,b,s]),tabValues:s}}var b=r(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(4848);function x(e){let{className:n,block:r,selectedValue:t,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const n=e.currentTarget,r=l.indexOf(n),a=i[r].value;a!==t&&(c(n),o(a))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":r},n),children:i.map((e=>{let{value:n,label:r,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:d,onClick:u,...s,className:(0,a.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function y(e){let{lazy:n,children:r,selectedValue:a}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function w(e){const n=f(e);return(0,v.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,v.jsx)(x,{...n,...e}),(0,v.jsx)(y,{...n,...e})]})}function j(e){const n=(0,b.A)();return(0,v.jsx)(w,{...e,children:d(e.children)},String(n))}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var t=r(6540);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);