"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8236],{2822:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var t=r(4848),s=r(8453);const i={id:"Events",sidebar_position:4},d=void 0,c={id:"api-reference/Events",title:"Events",description:"Event: 'error'",source:"@site/docs/api-reference/event.md",sourceDirName:"api-reference",slug:"/api-reference/Events",permalink:"/piscina/api-reference/Events",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"Events",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Methods",permalink:"/piscina/api-reference/Methods"},next:{title:"Properties",permalink:"/piscina/api-reference/Properties"}},o={},a=[{value:"Event: <code>&#39;error&#39;</code>",id:"event-error",level:2},{value:"Event: <code>&#39;drain&#39;</code>",id:"event-drain",level:2},{value:"Event: <code>&#39;needsDrain&#39;</code>",id:"event-needsdrain",level:2},{value:"Event: <code>&#39;message&#39;</code>",id:"event-message",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h2,{id:"event-error",children:["Event: ",(0,t.jsx)(n.code,{children:"'error'"})]}),"\n",(0,t.jsxs)(n.p,{children:["An ",(0,t.jsx)(n.code,{children:"'error'"})," event is emitted by instances of this class when:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Uncaught exceptions occur inside Worker threads that do not currently handle\ntasks."}),"\n",(0,t.jsx)(n.li,{children:"Unexpected messages are sent from from Worker threads."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["All other errors are reported by rejecting the ",(0,t.jsx)(n.code,{children:"Promise"})," returned from\n",(0,t.jsx)(n.code,{children:"run()"})," or ",(0,t.jsx)(n.code,{children:"runTask()"}),", including rejections reported by the handler function\nitself."]}),"\n",(0,t.jsxs)(n.h2,{id:"event-drain",children:["Event: ",(0,t.jsx)(n.code,{children:"'drain'"})]}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"'drain'"})," event is emitted whenever the ",(0,t.jsx)(n.code,{children:"queueSize"})," reaches ",(0,t.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,t.jsxs)(n.h2,{id:"event-needsdrain",children:["Event: ",(0,t.jsx)(n.code,{children:"'needsDrain'"})]}),"\n",(0,t.jsxs)(n.p,{children:["Similar to ",(0,t.jsx)(n.a,{href:"https://github.com/piscinajs/piscina#property-needsdrain-readonly",children:(0,t.jsx)(n.code,{children:"Piscina#needsDrain"})}),";\nthis event is triggered once the total capacity of the pool is exceeded\nby number of tasks enqueued that are pending of execution."]}),"\n",(0,t.jsxs)(n.h2,{id:"event-message",children:["Event: ",(0,t.jsx)(n.code,{children:"'message'"})]}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"'message'"})," event is emitted whenever a message is received from a worker thread."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>c});var t=r(6540);const s={},i=t.createContext(s);function d(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);