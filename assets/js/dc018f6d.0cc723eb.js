"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2661],{5933:(e,n,t)=>{t.d(n,{TF:()=>o});var r=t(4848),a=t(8453);const o=()=>{const e={code:"code",pre:"pre",...(0,a.R)()};return(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",title:"workerWrapper.js",children:'const { workerData } = require(\'worker_threads\');\n\nif (workerData.fullpath.endsWith(".ts")) {\nrequire("ts-node").register();\n}\nmodule.exports = require(workerData.fullpath);\n'})})}},5321:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var r=t(4848),a=t(8453),o=t(5933),s=t(1470),i=t(9365);const l={id:"Managing Worker Threads",sidebar_position:2},u=void 0,c={id:"getting-started/Managing Worker Threads",title:"Managing Worker Threads",description:"Delaying Availability of Workers",source:"@site/docs/getting-started/managing-worker-threads.mdx",sourceDirName:"getting-started",slug:"/getting-started/Managing Worker Threads",permalink:"/getting-started/Managing Worker Threads",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"Managing Worker Threads",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Basic Usage",permalink:"/getting-started/Basic Usage"},next:{title:"Examples",permalink:"/category/examples"}},d={},p=[{value:"Delaying Availability of Workers",id:"delaying-availability-of-workers",level:2},{value:"Managing Task Overload with Backpressure",id:"managing-task-overload-with-backpressure",level:2},{value:"Out of Scope Asynchronous Code",id:"out-of-scope-asynchronous-code",level:2}];function h(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"delaying-availability-of-workers",children:"Delaying Availability of Workers"}),"\n",(0,r.jsx)(n.p,{children:'A worker thread will not be made available to process tasks until Piscina\ndetermines that it is "ready". By default, a worker is ready as soon as\nPiscina loads it and acquires a reference to the exported handler function.'}),"\n",(0,r.jsxs)(n.p,{children:["There may be times when the availability of a worker may need to be delayed\nlonger while the worker initializes any resources it may need to operate.\nTo support this case, the worker module may export a ",(0,r.jsx)(n.code,{children:"Promise"})," that resolves\nthe handler function as opposed to exporting the function directly:"]}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(i.A,{value:"Javascript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'tab={"label":"Javascript"} title="worker.js"',children:"async function initialize() {\n  await someAsyncInitializationActivity();\n  return ({ a, b }) => a + b;\n}\n\nmodule.exports = initialize();\n"})})}),(0,r.jsx)(i.A,{value:"Typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'tab={"label":"Typescript"} title="worker.ts"',children:"interface OperationInput {\n  a: number;\n  b: number;\n}\nexport async function initialize(): Promise<(input: OperationInput) => number> {\n  await someAsyncInitializationActivity();\n  return ({ a, b }) => a + b;\n}\n"})})})]}),"\n",(0,r.jsx)(n.p,{children:"Piscina will await the resolution of the exported Promise before marking\nthe worker thread available."}),"\n",(0,r.jsx)(n.h2,{id:"managing-task-overload-with-backpressure",children:"Managing Task Overload with Backpressure"}),"\n",(0,r.jsxs)(n.p,{children:["When the ",(0,r.jsx)(n.code,{children:"maxQueue"})," option is set, once the ",(0,r.jsx)(n.code,{children:"Piscina"})," queue is full, no\nadditional tasks may be submitted until the queue size falls below the\nlimit. The ",(0,r.jsx)(n.code,{children:"'drain'"})," event may be used to receive notification when the\nqueue is empty and all tasks have been submitted to workers for processing."]}),"\n",(0,r.jsx)(n.p,{children:"The example below shows how to use a Node.js stream to feed a Piscina worker pool:"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(i.A,{value:"Javascript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'tab={"label":"Javascript"}',children:'"use strict";\n\nconst { resolve } = require("path");\nconst Pool = require("piscina");\n\nconst pool = new Pool({\n  filename: resolve(__dirname, "worker.js"),\n  maxQueue: "auto",\n});\n\nconst stream = getStreamSomehow();\nstream.setEncoding("utf8");\n\npool.on("drain", () => {\n  if (stream.isPaused()) {\n    console.log("resuming...", counter, pool.queueSize);\n    stream.resume();\n  }\n});\n\nstream\n  .on("data", (data) => {\n    pool.run(data);\n    if (pool.queueSize === pool.options.maxQueue) {\n      console.log("pausing...", counter, pool.queueSize);\n      stream.pause();\n    }\n  })\n  .on("error", console.error)\n  .on("end", () => {\n    console.log("done");\n  });\n'})})}),(0,r.jsxs)(i.A,{value:"Typescript",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'tab={"label":"Typescript","span":2}',children:'import Pool from "piscina";\nimport { resolve } from "path";\nimport { filename } from "./worker.js";\n\nconst pool = new Pool({\n  filename: resolve(__dirname, "./workerWrapper.js"),\n  workerData: { fullpath: filename },\n  maxQueue: "auto",\n});\n\nconst stream = getStreamSomehow();\nstream.setEncoding("utf8");\n\nlet counter = 0;\n\npool.on("drain", () => {\n  if (stream.isPaused()) {\n    console.log("resuming...", counter, pool.queueSize);\n    stream.resume();\n  }\n});\n\nstream\n  .on("data", (data: string) => {\n    pool.run(data);\n    if (pool.queueSize === pool.options.maxQueue) {\n      console.log("pausing...", counter, pool.queueSize);\n      stream.pause();\n    }\n  })\n  .on("error", console.error)\n  .on("end", () => {\n    console.log("done");\n  });\n'})}),(0,r.jsx)(o.TF,{})]})]}),"\n",(0,r.jsx)(n.h2,{id:"out-of-scope-asynchronous-code",children:"Out of Scope Asynchronous Code"}),"\n",(0,r.jsxs)(n.p,{children:["A worker thread is ",(0,r.jsx)(n.strong,{children:"only"})," active until the moment it returns a result, it can be a result of a synchronous call or a Promise that will be fulfilled/rejected in the future. Once this is done, Piscina will wait for ",(0,r.jsx)(n.code,{children:"stdout"})," and ",(0,r.jsx)(n.code,{children:"stderr"})," to be flushed, and then pause the worker's event-loop until the next call. If async code is scheduled without being awaited before returning since Piscina has no way of detecting this, that code execution will be resumed on the next call. Thus, it is highly recommended to properly handle all async tasks before returning a result as it could make your code unpredictable."]}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(i.A,{value:"Javascript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'tab={"label":"Javascript"}',children:'const { setTimeout } = require("timers/promises");\n\nmodule.exports = ({ a, b }) => {\n  // This promise should be awaited\n  setTimeout(1000).then(() => {\n    console.log("Working"); // This will **not** run during the same worker call\n  });\n\n  return a + b;\n};\n'})})}),(0,r.jsx)(i.A,{value:"Typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'tab={"label":"Typescript"}',children:'import { setTimeout } from "timers/promises";\n\ninterface OperationInput {\n  a: number;\n  b: number;\n}\n\nexport async ({ a, b }: OperationInput): Promise<number> => {\n  // This promise should be awaited\n  await setTimeout(1000);\n  console.log("Working"); // This will **not** run during the same worker call\n\n  return a + b;\n};\n'})})})]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var r=t(4164);const a={tabItem:"tabItem_Ymn6"};var o=t(4848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,s),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>k});var r=t(6540),a=t(4164),o=t(3104),s=t(6347),i=t(205),l=t(7485),u=t(1682),c=t(679);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,s.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,o=p(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[u,d]=m({queryString:t,groupId:a}),[g,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,c.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:a}),f=(()=>{const e=u??g;return h({value:e,tabValues:o})?e:null})();(0,i.A)((()=>{f&&l(f)}),[f]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),b(e)}),[d,b,o]),tabValues:o}}var b=t(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(4848);function x(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),a=i[t].value;a!==r&&(u(n),s(a))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:d,onClick:c,...o,className:(0,a.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function w(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=g(e);return(0,v.jsxs)("div",{className:(0,a.A)("tabs-container",f.tabList),children:[(0,v.jsx)(x,{...n,...e}),(0,v.jsx)(w,{...n,...e})]})}function k(e){const n=(0,b.A)();return(0,v.jsx)(y,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var r=t(6540);const a={},o=r.createContext(a);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);